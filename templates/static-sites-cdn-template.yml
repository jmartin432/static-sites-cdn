AWSTemplateFormatVersion: '2010-09-09'
Description: The AWS CloudFormation template for Static Sites CDN

# 1. Add URLs to Mappings
# 2. Add DNS Records to StaticSitesDnsRecords

Parameters:
  Region:
    Type: String
    Default: us-east-1
  TimeStamp:
    Type: String
  RootDomain:
    Type: String
    Default: justinlmartin.com
  AccountId:
    Type: String
    Default: '{{resolve:ssm:account-id:1}}'
  Stage:
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev
    Description: Stage
  ServiceName:
    Type: String
    Default: static-sites-cdn
  SslCert:
    Type: String
    Default: '{{resolve:ssm:static-sites-cdn-ssl-cert-arn:1}}'
  HostedZoneId:
    Type: String
    Default: '{{resolve:ssm:static-sites-cdn-hosted-zone:1}}'

Mappings:
  AliasMap:
    dev:
      Aliases:
        - peaks-valleys-dev.justinlmartin.com
        - creative-coding-dev.justinlmartin.com
        - spaceblobman-dev.justinlmartin.com
        - sunrise-sunset-dev.justinlmartin.com
        - blackjack-dev.justinlmartin.com
        - coding-portfolio-dev.justinlmartin.com
        - sunflower-synth-dev.justinlmartin.com
        - sampampulancer-dev.justinlmartin.com
        - qr-dev.justinlmartin.com
        - landing-page-dev.justinlmartin.com
    prod:
      Aliases:
        - peaks-valleys.justinlmartin.com
        - creative-coding.justinlmartin.com
        - spaceblobman.justinlmartin.com
        - sunrise-sunset.justinlmartin.com
        - blackjack.justinlmartin.com
        - coding-portfolio.justinlmartin.com
        - sunflower-synth.justinlmartin.com
        - sampampulancer.justinlmartin.com
        - qr.justinlmartin.com
        - landing-page.justinlmartin.com
#      Make sure these are always last
        - www.justinlmartin.com
        - justinlmartin.com
  LambdasBucketMap:
    dev:
      Name: '{{resolve:ssm:static-sites-cdn-lambdas-dev-bucket:1}}'
    prod:
      Name: '{{resolve:ssm:static-sites-cdn-lambdas-prod-bucket:1}}'
  StaticSitesPipelineDeploymentBucketMap:
    dev:
      Name: '{{resolve:ssm:static-sites-pipeline-deployment-dev-bucket:1}}'
    prod:
      Name: '{{resolve:ssm:static-sites-pipeline-deployment-prod-bucket:1}}'
  SubdomainSuffixMap:
    dev:
      Suffix: '-dev'
    prod:
      Suffix: ''

Resources:

# Roles and Policies

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub static-sites-cdn-${Stage}-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub static-sites-cdn-${Stage}-lambda-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowLogging
                Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:CreateLogGroup'
                  - 'logs:DescribeLogStreams'
                Resource:
                  - 'arn:aws:logs:*:*:*'
              - Sid: AllowS3Access
                Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub
                    - arn:aws:s3:::${BucketName}
                    - BucketName: !FindInMap [ StaticSitesPipelineDeploymentBucketMap, !Ref Stage, Name ]
                  - !Sub
                    - arn:aws:s3:::${BucketName}/*
                    - BucketName: !FindInMap [ StaticSitesPipelineDeploymentBucketMap, !Ref Stage, Name ]
              - Sid: AllowVersionPublishing
                Effect: Allow
                Action:
                  - 'lambda:ListVersionsByFunction'
                  - 'lambda:PublishVersion'
                Resource:
                  - '*'
      Path: '/'

  PipelineDeployBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !FindInMap [StaticSitesPipelineDeploymentBucketMap, !Ref Stage, Name]
      PolicyDocument:
        Statement:
          - Sid: PipelineDeployBucketAllowRead
            Action: 's3:GetObject'
            Effect: Allow
            Resource: !Sub
              - arn:aws:s3:::${BucketName}/*
              - BucketName: !FindInMap [ StaticSitesPipelineDeploymentBucketMap, !Ref Stage, Name ]
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

#  Buckets

  LambdasBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !FindInMap [LambdasBucketMap, !Ref Stage, Name]
      VersioningConfiguration:
        Status: Suspended
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

# Lambdas

  OriginRouterLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdasBucket
        S3Key: !Sub ${TimeStamp}/origin-router-lambda.zip
      FunctionName: !Sub static-sites-cdn-${Stage}-origin-router
      Handler: origin-router-lambda.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: 5
      Description: Routes Cloud Front Requests to S3 Bucket based on subdomain
    DependsOn:
      - LambdaRole

  CustomHeadersLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdasBucket
        S3Key: !Sub ${TimeStamp}/custom-headers-lambda.zip
      FunctionName: !Sub static-sites-cdn-${Stage}-custom-headers
      Handler: custom-headers-lambda.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: 5
      Description: Adds original host request as x-forwarded-host
    DependsOn:
      - LambdaRole

  VersionPublisherLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdasBucket
        S3Key: !Sub ${TimeStamp}/version-publisher-lambda.zip
      FunctionName: !Sub static-sites-cdn-${Stage}-version-publisher
      Handler: version-publisher-lambda.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: 5
      Description: Publishes new verions of previous two lambdas for use in CDN
    DependsOn:
      - LambdaRole

  OriginRouterPublishVersionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:PublishVersion'
      FunctionName: !Ref OriginRouterLambdaFunction
      Principal: 'lambda.amazonaws.com'
      SourceArn: !GetAtt VersionPublisherLambdaFunction.Arn
    DependsOn:
      - OriginRouterLambdaFunction

  CustomHeadersPublishVersionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:PublishVersion'
      FunctionName: !Ref CustomHeadersLambdaFunction
      Principal: 'lambda.amazonaws.com'
      SourceArn: !GetAtt VersionPublisherLambdaFunction.Arn
    DependsOn:
      - CustomHeadersLambdaFunction

  LambdaVersionRequest:
    Type: 'Custom::LambdaVersionRequest'
    Properties:
      ServiceToken: !GetAtt VersionPublisherLambdaFunction.Arn
      TimeStamp: !Ref TimeStamp
      FunctionArns:
        OriginRouterLambda: !GetAtt OriginRouterLambdaFunction.Arn
        CustomHeadersLambda: !GetAtt CustomHeadersLambdaFunction.Arn
    DependsOn:
      - OriginRouterLambdaFunction
      - CustomHeadersLambdaFunction
      - VersionPublisherLambdaFunction

# CDN

  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !FindInMap [ StaticSitesPipelineDeploymentBucketMap, !Ref Stage, Name ]

  StaticSitesCdn:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Comment: !Ref Stage
        ViewerCertificate:
          AcmCertificateArn: !Ref SslCert
          SslSupportMethod: sni-only
        CustomErrorResponses:
        - ErrorCode: 403 # not found
          ResponseCode: 404
          ResponsePagePath: /error.html
        DefaultRootObject: index.html
        Enabled: true
        Aliases: !FindInMap [ AliasMap, !Ref Stage, Aliases ]
        HttpVersion: http2
        Origins:
          - DomainName: !Sub
            - ${BucketName}.s3.amazonaws.com
            - BucketName: !FindInMap [ StaticSitesPipelineDeploymentBucketMap, !Ref Stage, Name ]
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
            OriginCustomHeaders:
              - HeaderName: BucketOrigin
                HeaderValue: !FindInMap [ StaticSitesPipelineDeploymentBucketMap, !Ref Stage, Name ]
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 30
          MinTTL: 10
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: all
            Headers:
              - Host
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !GetAtt LambdaVersionRequest.OriginRouterLambdaQualifiedArn
            - EventType: viewer-request
              LambdaFunctionARN: !GetAtt LambdaVersionRequest.CustomHeadersLambdaQualifiedArn
    DependsOn:
      - LambdaVersionRequest

# DNS Records

  StaticSitesDnsRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${RootDomain}. # The last period is important?
      Comment: DNS records associated with Static Sites CDN
      RecordSets:
        - Name: !Select
          - 0
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 0
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 1
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 1
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 2
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 2
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 3
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 3
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 4
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 4
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 5
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 5
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 6
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 6
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 7
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 7
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 8
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 8
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 9
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: A
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId
        - Name: !Select
          - 9
          - !FindInMap [ AliasMap, !Ref Stage, Aliases ]
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt StaticSitesCdn.DomainName
            HostedZoneId: !Ref HostedZoneId

Outputs:
  LatestTimeStamp:
    Value: !Ref TimeStamp
  LambdasBucketName:
    Value: !Ref LambdasBucket
  DistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref StaticSitesCdn
  DistributionDomain:
    Description: 'Cloudfront Domain'
    Value: !GetAtt StaticSitesCdn.DomainName
  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn
  OriginRouterLambdaQualifiedArn:
    Description: Current Lambda function version
    Value: !GetAtt LambdaVersionRequest.OriginRouterLambdaQualifiedArn
  CustomHeadersLambdaQualifiedArn:
    Description: Current Lambda function version
    Value: !GetAtt LambdaVersionRequest.CustomHeadersLambdaQualifiedArn
  LambdaVersionRequestPhysicalResourceId:
    Description: Physical Resource ID for latest version publish request
    Value: !GetAtt LambdaVersionRequest.PhysicalResourceId
